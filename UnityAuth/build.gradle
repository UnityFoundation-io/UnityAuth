plugins {
  id("com.gradleup.shadow") version "${shadowVersion}"
  id("io.micronaut.application") version "${micronautPluginVersion}"
  id("io.micronaut.test-resources") version "${micronautPluginVersion}"
  id("io.micronaut.aot") version "${micronautPluginVersion}"
}

version = "0.1"
group = "io.unityfoundation"

repositories {
  mavenCentral()
}

dependencies {
  annotationProcessor("io.micronaut.data:micronaut-data-processor")
  annotationProcessor("io.micronaut:micronaut-http-validation")
  annotationProcessor("io.micronaut.security:micronaut-security-annotations")
  annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
  implementation("io.micronaut.security:micronaut-security-jwt")
  implementation("io.micronaut.data:micronaut-data-jdbc")
  implementation("io.micronaut.sql:micronaut-jdbc-hikari")
  implementation("io.micronaut.flyway:micronaut-flyway")
  implementation("io.micronaut.serde:micronaut-serde-jackson")
  implementation("io.micronaut.sql:micronaut-jdbc-hikari")
  implementation("io.micronaut.reactor:micronaut-reactor")
  implementation("at.favre.lib:bcrypt:0.10.2")
  compileOnly("io.micronaut:micronaut-http-client")
  runtimeOnly("ch.qos.logback:logback-classic")
  runtimeOnly("mysql:mysql-connector-java")
  runtimeOnly("org.flywaydb:flyway-mysql")
  runtimeOnly("org.yaml:snakeyaml")
  testImplementation("io.micronaut:micronaut-http-client")

  aotPlugins platform("io.micronaut.platform:micronaut-platform:${micronautPluginVersion}")
  aotPlugins("io.micronaut.security:micronaut-security-aot")

  String databaseSelection = System.getenv("UNITYAUTH_DATABASE_DEPENDENCY")
  if (databaseSelection != null) {
    databaseSelection.split(',').each {part ->
      runtimeOnly(part)
    }
  }
}

application {
  mainClass.set("io.unityfoundation.Application")
}
java {
  sourceCompatibility = JavaVersion.toVersion("21")
  targetCompatibility = JavaVersion.toVersion("21")
}

graalvmNative.toolchainDetection = false
micronaut {
  runtime("netty")
  testRuntime("junit5")
  processing {
    incremental(true)
    annotations("io.unityfoundation.*")
  }
  testResources {
    additionalModules.add("jdbc-mysql")
  }
  aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
    optimizeServiceLoading = false
    convertYamlToJava = false
    precomputeOperations = true
    cacheEnvironment = true
    optimizeClassLoading = true
    deduceEnvironment = true
    optimizeNetty = true
    configurationProperties.put("micronaut.security.jwks.enabled","false")
  }
}
